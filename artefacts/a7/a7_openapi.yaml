openapi: 3.0.0

info:
  version: '1.0'
  title: 'LBAW Active News Web API'
  description: 'Web Resources Specification (A7) for Active News'

  servers:
  - url: http://lbaw22104.lbaw.fe.up.pt/
    description: Production server

tags:
  - name: 'M01: Authentication and Member Profile'
  - name: 'M02: News'
  - name: 'M03: Comments'
  - name: 'M04: Tags'
  - name: 'M05: Notifications'
  - name: 'M06: Search'
  - name: 'M07: Member Administration and Static Pages'

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication and Member Profile'
      responses:
        '200':
          description: 'Ok.'
    news_post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Member Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to previous page.'
                302Error:
                  description: 'Failed authentication. Redirect to previous page.'
  /logout:
    get:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated used. Access: USR'
      tags:
        - 'M01: Authentication and Member Profile'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /signup:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new Member registration form. Access: PUB'
      tags:
        - 'M01: Authentication and Member Profile'
      responses:
        '200':
          description: 'Ok.'
        '404':
          description: 'Page not found.'
    news_post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Processes the new Member registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication and Member Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
              required:
                - name
                - email
                - username
                - password
                - confirm_password
      responses:
        '302':
          description: 'Redirect after processing the new Member information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to Member profile.'
                  value: '/member/{username}'
                302Failure:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'
  /member/{username}:
    get:
      operationId: R106
      summary: 'R106: Members Profile'
      description: 'Page that shows Member information. Access: PUB'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      responses:
        '200':
          description: 'Ok.'
        '404':
          description: 'Member not found.'
  /member/{username}/edit:
    get:
      operationId: R107
      summary: 'R107: Edit Profile Form'
      description: 'Page that allows a Member to update his information. Access: OWN'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Member not found.'
    patch:
      operationId: R108
      summary: 'R108: Edit Profile Action'
      description: 'Allows a Member to edit his information. Access: OWN'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
                
      responses:
        '302':
          description: 'Redirect Member after editing profile.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Member information edited successfully. Redirects Member to their profile page.'
                  value: '/member/{username}'
                302Failure:
                  description: 'Member information editing failed. Stay in edit page.'
                  value: '/member/{username}/edit'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Member not found'
  /member/{username}/settings:
    get:
      operationId: R109
      summary: 'R109: Member account settings'
      description: 'Page to edit Members account. Access: OWN'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      responses:
        '200':
          description: 'Ok.'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Page not found'
  /api/change_email:
    patch:
      operationId: R110
      summary: 'R110: Change Members email'
      description: 'Allows a Member to change its email. Access: OWN'
      tags:
        - 'M01: Authentication and Member Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                email_confirmation:
                  type: string
                password:
                  type: string
              required:
                - email
                - email_confirmation
                - password
      responses:
        '200':
          description: 'Updated email.'
        '403':
          description: 'Forbidden access'
  /api/change_password:
    patch:
      operationId: R111
      summary: 'R111: Change Members password'
      description: 'Allows a Member to change its email. Access: OWN'
      tags:
        - 'M01: Authentication and Member Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
                new_password_confirmation:
                  type: string
              required:
                - old_password
                - new_password
                - new_password_confirmation
      responses:
        '200':
          description: 'Updated password.'
        '403':
          description: 'Forbidden access'
  /api/member/{username}:
    delete:
      operationId: R112
      summary: 'R112: Delete an account'
      description: 'Allows to delete a Member account. Access OWN, ADM'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      responses:
        '302':
          description: 'Redirect Member after deletion.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Member deleted successfully. Redirects Member to homepage.'
                  value: '/home'
                302Failure:
                  description: 'Member deletion failed. Redirects Member to homepage.'
                  value: '/home'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Member not found'
  /api/member/{username}/follow:
    news_post:
      operationId: R113
      summary: 'R113: Follow a Member'
      description: 'Allows a Member to follow another Member. Access: USR'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the username of the Member that will be followed'
          required: true
      responses:
        '200':
          description: 'Member followed successfully'
        '403':
          description: 'Forbidden Access'
        '404':
          description: 'Member not found'
    delete:
      operationId: R114
      summary: 'R114: Unfollow a Member'
      description: 'Allows a Member to unfollow another Member. Access: USR'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: 'Specifies the username of the Member that will be unfollowed'
      responses:
        '200':
          description: 'Member unfollowed successfully'
        '403':
          description: 'Forbidden Access'
        '404':
          description: 'Member not found'
  /api/member/{username}/report:
    news_post:
      operationId: R115
      summary: 'R115: Report a Member'
      description: 'Allows a Member to report another Member. Access: USR'
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the username of the Member that will be reported'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/report'
      responses:
        '200':
          description: 'Member reported successfully'
        '403':
          description: 'Forbidden Access'
        '404':
          description: 'Member not found'
  /api/member/{username}/news_post/{page}:
    get:
      operationId: R116
      summary: "R116: Member's news_post posts"
      description: "Shows Member's posted news_post. Access: PUB"
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the username of the Member'
          required: true
        - in: path
          name: page
          schema:
            type: string
          description: 'Specifies the number of the page for the query'
          required: true
      responses:
        '200':
          description: 'Ok.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref'
        '404':
          description: 'Member not found'
  /api/member/{username}/comments/{page}:
    get:
      operationId: R117
      summary: "R117: Member's comments"
      description: "Shows Member's posted comments. Access: PUB"
      tags:
        - 'M01: Authentication and Member Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the username of the Member'
          required: true
        - in: path
          name: page
          schema:
            type: string
          description: 'Specifies the number of the page for the query'
          required: true
      responses:
        '200':
          description: 'Ok.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        '404':
          description: 'Member not found'
  
  /home:
    get:
      operationId: R201
      summary: 'R201: Shows main page'
      description: 'Obtains main page Hall of Fame and Most Popular tags. Access: PUB'
      tags:
        - 'M02: news_post'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found'
  /api/home/feed/{page}:
    news_post:
      operationId: R202
      summary: 'R202: Main page feed posts'
      description: "Returns Member's feed posts. Access: USR"
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: page
          schema:
            type: string
          description: 'Specifies the number of the page for the query'
          required: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/home/trending/{page}:
    news_post:
      operationId: R203
      summary: 'R203: Main page trending posts'
      description: "Returns Activenews_post trending posts. Access: PUB"
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: page
          schema:
            type: string
          description: 'Specifies the number of the page for the query'
          required: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/news_post'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/home/latest/{page}:
    news_post:
      operationId: R204
      summary: 'R204: Main page latest posts'
      description: "Returns Activenews_post latest posts. Access: PUB"
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: page
          schema:
            type: string
          description: 'Specifies the number of the page for the query'
          required: true
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/news_post'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /news_post/create:
    get:
      operationId: R205
      summary: 'R205: Shows create post page'
      description: 'Allows Member to access create post page. Access: USR'
      tags:
        - 'M02: news_post'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form'
                  value: '/login'
    news_post:
      operationId: R206
      summary: 'R206: Adds a news_post post'
      description: 'Allows a Member to create a news_post post. Access: USR'
      tags:
        - 'M02: news_post'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/news_post'
      responses:
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form.'
                  value: '/login'
        '400':
          description: 'Bad Request'
  /news_post/{id}:
    get:
      operationId: R207
      summary: 'R207: Shows a news_post post'
      description: 'Shows a post and its comments. Access: PUB'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be displayed'
          required: true
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Invalid news_post id'
    delete:
      operationId: R208
      summary: 'R208: Delete a news_post post'
      description: 'Allows a Member to delete a news_post post. Access OWN, ADM'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the news_post to be deleted'
          required: true
      responses:
        '302':
          description: 'Redirect after updating the news_post content.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful edition. Redirect to previous page.'
                302Error:
                  description: 'Failed edition. Redirect to previous page.'
  /news_post/{id}/edit:
    get:
      operationId: R211
      summary: 'R211: Shows edit news_post post page'
      description: 'Allows a Member to edit his post. Access: OWN'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be edited'
          required: true
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Invalid news_post id'
    patch:
      operationId: R212
      summary: 'R212: Edit a news_post post'
      description: 'Edits the content of a news_post post. Access: OWN'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be edited'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/news_post'
      responses:
        '302':
          description: 'Redirect after updating the news_post post content.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful edition. Redirect to post page.'
                  value: '/news_post/{id}'
                302Error:
                  description: 'Failed edition. Redirect to edit page.'
                  value: '/news_post/{id}/edit'
        '403':
          description: 'Forbidden access'
        '400':
          description: 'Bad Request'
  /api/news_post/{id}/vote:
    news_post:
      operationId: R213
      summary: 'R213: Rate a news_post post'
      description: 'Allows a Member to rate a news_post post. Access USR'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be rated'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/vote'
      responses:
        '200':
          description: 'Rated post successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Post not found'
        '302':
          description: 'Redirect visitor.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirect to login form.'
                  value: '/login'
    patch:
      operationId: R214
      summary: 'R214: Change vote on a news_post post'
      description: 'Allows a Member to change their vote on a news_post post. Access: OWN'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be rated'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/vote'
      responses:
        '200':
          description: 'Vote edited successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Post not found'
    delete:
      operationId: R215
      summary: 'R215: Remove a vote on a news_post post'
      description: 'Allows a Member to remove their vote on a post. Access: OWN'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to remove the rating'
          required: true
      responses:
        '200':
          description: 'Vote deleted successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Post not found'
  /api/news_post/{id}/report:
    news_post:
      operationId: R216
      summary: 'R216: Report a post'
      description: 'Allows a Member to report a news_post post. Access: USR'
      tags:
        - 'M02: news_post'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: 'Specifies the id of the post to be reported'
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        '200':
          description: 'Report successfully sent'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Post not found'


  /api/news_post/{id}/comment:
    news_post:
      operationId: R301
      summary: 'R301: Comment on a post'
      description: 'Allows a Member to comment on a post. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the post to be commented'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        '200':
          description: 'Comment created successfully'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Post not found'
  /api/comment/{id}:
    patch:
      operationId: R302
      summary: 'R302: Edit a comment'
      description: 'Allows a Member to edit a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be edited'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        '200':
          description: 'Comment edited successfully'
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/comment'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
    delete:
      operationId: R303
      summary: 'R303: Delete a comment'
      description: 'Allows a Member to delete a comment. Access: OWN, ADM'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be deleted'
      responses:
        '200':
          description: 'Comment deleted successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
  /api/comment/{id}/report:
    news_post:
      operationId: R305
      summary: 'R305: Report a comment'
      description: 'Allows a Member to report a comment. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be reported'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        '200':
          description: 'Comment reported successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
  /api/comment/{id}/vote:
    news_post:
      operationId: R306
      summary: 'R306: Rate a comment'
      description: 'Allows a Member to rate a comment. Access: USR'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment to be voted'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/vote'
      responses:
        '200':
          description: 'Rated comment successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
    patch:
      operationId: R307
      summary: 'R307: Change vote on a comment'
      description: 'Allows a Member to change their vote on a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment where the vote is to be edited'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/vote'
      responses:
        '200':
          description: 'Vote edited successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
    delete:
      operationId: R308
      summary: 'R308: Remove a vote on a comment'
      description: 'Allows a Member to remove a vote on a comment. Access: OWN'
      tags:
        - 'M03: Comments'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the comment where the vote is to be deleted'
      responses:
        '200':
          description: 'Vote deleted successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Comment not found'
  /tag/{name}:
    get:
      operationId: R401
      summary: 'R401: Show used tags on a news_post post'
      description: "Show a tag on it's posts. Access:PUB"
      tags:
        - 'M04: tags'
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: 'Specifies the name of the tag'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '404':
          description: 'tag not found'
    delete:
      operationId: R402
      summary: 'R402: Delete a tag'
      description: 'Allows an admin to delete a tag. Access: ADM'
      tags:
        - 'M04: tags'
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: 'Specifies the name of the tag'
      responses:
        '200':
          description: 'tag deleted successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'tag not found'

 /api/tag/{id}/follow:
    news_post:
      operationId: R403
      summary: 'R403: Follow a specific tag'
      description: 'Allows a member to follow a tag. Access: USR'
      tags:
        - 'M04: Tags'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the tag that will be followed'
      responses:
        '200':
          description: 'Tag followed successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Tag not found'
    delete:
      operationId: R404
      summary: 'R404: Unfollow a tag'
      description: 'Allows a member to unfollow a tag. Access: USR'
      tags:
        - 'M04: Tags'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'Specifies the id of the tag that will be unfollowed'
      responses:
        '200':
          description: 'Tag unfollowed successfully'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Tag not found'

  /api/member/{username}/notifications:
    news_post:
      operationId: R501
      summary: "R501: Get Member's notifications"
      description: "Returns all Member's notifications as JSON. Access: USR"
      tags:
        - 'M05: notifications'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          description: 'Specifies the Member username'
          required: true
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notifications'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'notifications not found.'
  /search:
    news_post:
      operationId: R601
      summary: 'R601: Search for a post or Member'
      description: 'Allows a website Member to search for a post or Member. Access: PUB'
      tags:
        - 'M06: Search'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                query:
                  type: string
              required:
                - query
      responses:
        '302':
          description: 'Redirect after processing the query.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful search. Redirect to search results page.'
                  value: '/search/{query}'
        '400':
          description: 'Bad Request'
  /search/{query}:
    get:
      operationId: R602
      summary: 'R602: Search results'
      description: 'Show the search results for posts or Members according to query. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: path
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success.'
        '400':
          description: 'Bad Request'
        '404':
          description: 'Page not found'
  /api/search/news_post:
    get:
      operationId: R603
      summary: 'R603: Search news_post Posts API'
      description: 'Searches for news_post posts and returns the result as JSON. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/news_post'
        '400':
          description: 'Bad Request'
  /api/search/members:
    get:
      operationId: R605
      summary: 'R605: Search Members API'
      description: 'Searches for Members and returns the result as JSON. Access: PUB'
      tags:
        - 'M06: Search'
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: 'Specifies the query received'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/member'
        '400':
          description: 'Bad Request'

  /admin:
    get:
      operationId: R701
      summary: 'R701: Show admin page'
      description: 'Shows a admin page with most reported content. Access: ADM'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
        '404':
          description: 'Invalid filter'
  /api/reports/news_post:
    get:
      operationId: R702
      summary: 'R702: Reported news_post API'
      description: 'Returns reported news_post as JSON. Access: ADM'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/reports/comments:
    get:
      operationId: R703
      summary: 'R703: Reported Comments API'
      description: 'Returns reported comments as JSON. Access: ADM'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /api/reports/members:
    get:
      operationId: R705
      summary: 'R705: Reported Members API'
      description: 'Returns reported Members as JSON. Access: ADM'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/member'
        '400':
          description: 'Bad Request'
        '403':
          description: 'Forbidden access'
  /about:
    get:
      operationId: R706
      summary: 'R706: About Us page'
      description: 'Show about us page. Access: PUB'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'
  /404:
    get:
      operationId: R707
      summary: 'R707: 404 page'
      description: 'Show 404 (Not found) page. Access: PUB'
      tags:
        - 'M07: Member Administration and Static Pages'
      responses:
        '200':
          description: 'Ok.'
        '400':
          description: 'Bad Request'


components:
  schemas:
    member:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        contact:
          type: integer
        password:
          type: string
        username:
          type: string
        email:
          type: string
        isBanned:
          type: boolean
          enum: [true,false]
        admin:
          type: boolean
          enum: [true,false]
       
    tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    comment:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        date_time:
          type: string
          format: date-time
        id_owner:
          type: integer
        id_post:
          type: integer

    news_post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        date_time:
          type: string
          format: date-time
        id_owner:
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag'
        images:
          type: array
          items:
            type: string
            format: byte

    report:
      type: object
      properties:
        id:
          type: integer
        id_reporter:
          type: integer
        motive:
          type: string 
        date_time:
          type: string
          format: date-time
        report-type:
          type: string 
        id_post:
          type: integer
        id_comment:
          type: string
        
    vote:
      type: object
      properties:
        id:
          type: integer
        id_voter:
          type: integer
        upvote: 
          type: boolean
          enum: [true,false]
        vote_type:
          type: string 
        id_post:
          type: integer
        id_comment:
          type: integer 

    notifications:
      type: object
      properties:
        id:
          type: integer 
        id_notified:
          type: integer
        seen:
          type: boolean
          enum: [true,false]
        date_time:
          type: string
          format: date-time
        notifications_type:
          type: string 
        id_warnings:
          type: integer
        id_follower:
          type: integer
        id_vote:
          type: integer
        id_comment:
          type: integer
        id_post:
          type: integer

  warning:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        seen: 
          type: boolean
          enum: [true,false]
        adminID:
          type: integer 
